// <auto-generated />
using System;
using BarClip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarClip.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529171455_FreshStart")]
    partial class FreshStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarClip.Data.Schema.DetectionOutput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FrameTensorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputShape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RawOutput")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FrameTensorId");

                    b.ToTable("DetectionOutputs");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrameNumber")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Timestamp")
                        .HasColumnType("time");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("BarClip.Data.Schema.FrameTensor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FrameId")
                        .IsUnique();

                    b.ToTable("FrameTensors");
                });

            modelBuilder.Entity("BarClip.Data.Schema.PlateDetection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoundingBox")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Confidence")
                        .HasColumnType("real");

                    b.Property<DateTime>("DetectedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DetectionOutputId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PlateText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VideoConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DetectionOutputId");

                    b.HasIndex("FrameId")
                        .IsUnique();

                    b.HasIndex("VideoConfigurationId");

                    b.ToTable("PlateDetections");
                });

            modelBuilder.Entity("BarClip.Data.Schema.TrimmedVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OriginalVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OriginalVideoId");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoConfigurationId");

                    b.ToTable("TrimmedVideos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FrameRate")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VideoConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoConfigurationId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.VideoConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DetectedPlates")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OriginalVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProcessedFrames")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalFrames")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("VideoConfigurations");
                });

            modelBuilder.Entity("BarClip.Data.Schema.DetectionOutput", b =>
                {
                    b.HasOne("BarClip.Data.Schema.FrameTensor", "FrameTensor")
                        .WithMany("DetectionOutputs")
                        .HasForeignKey("FrameTensorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FrameTensor");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Video", "Video")
                        .WithMany("Frames")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("BarClip.Data.Schema.FrameTensor", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Frame", "Frame")
                        .WithOne("FrameTensor")
                        .HasForeignKey("BarClip.Data.Schema.FrameTensor", "FrameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Frame");
                });

            modelBuilder.Entity("BarClip.Data.Schema.PlateDetection", b =>
                {
                    b.HasOne("BarClip.Data.Schema.DetectionOutput", "DetectionOutput")
                        .WithMany("PlateDetections")
                        .HasForeignKey("DetectionOutputId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.Frame", "Frame")
                        .WithOne("PlateDetection")
                        .HasForeignKey("BarClip.Data.Schema.PlateDetection", "FrameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.VideoConfiguration", "VideoConfiguration")
                        .WithMany("PlateDetections")
                        .HasForeignKey("VideoConfigurationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DetectionOutput");

                    b.Navigation("Frame");

                    b.Navigation("VideoConfiguration");
                });

            modelBuilder.Entity("BarClip.Data.Schema.TrimmedVideo", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Video", "OriginalVideo")
                        .WithMany("TrimmedVideos")
                        .HasForeignKey("OriginalVideoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.User", "User")
                        .WithMany("TrimmedVideos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.VideoConfiguration", "VideoConfiguration")
                        .WithMany("TrimmedVideos")
                        .HasForeignKey("VideoConfigurationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("OriginalVideo");

                    b.Navigation("User");

                    b.Navigation("VideoConfiguration");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.HasOne("BarClip.Data.Schema.User", "User")
                        .WithMany("Videos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.VideoConfiguration", "VideoConfiguration")
                        .WithMany("Videos")
                        .HasForeignKey("VideoConfigurationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VideoConfiguration");
                });

            modelBuilder.Entity("BarClip.Data.Schema.VideoConfiguration", b =>
                {
                    b.HasOne("BarClip.Data.Schema.User", "User")
                        .WithOne("VideoSettings")
                        .HasForeignKey("BarClip.Data.Schema.VideoConfiguration", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarClip.Data.Schema.DetectionOutput", b =>
                {
                    b.Navigation("PlateDetections");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.Navigation("FrameTensor");

                    b.Navigation("PlateDetection");
                });

            modelBuilder.Entity("BarClip.Data.Schema.FrameTensor", b =>
                {
                    b.Navigation("DetectionOutputs");
                });

            modelBuilder.Entity("BarClip.Data.Schema.User", b =>
                {
                    b.Navigation("TrimmedVideos");

                    b.Navigation("VideoSettings");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.Navigation("Frames");

                    b.Navigation("TrimmedVideos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.VideoConfiguration", b =>
                {
                    b.Navigation("PlateDetections");

                    b.Navigation("TrimmedVideos");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
