// <auto-generated />
using System;
using BarClip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarClip.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250608054313_CleanedUp")]
    partial class CleanedUp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrameNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("BarClip.Data.Schema.PlateDetection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Confidence")
                        .HasColumnType("real");

                    b.Property<int>("DetectionNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("FrameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.Property<float>("Y")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FrameId");

                    b.ToTable("PlateDetections");
                });

            modelBuilder.Entity("BarClip.Data.Schema.TrimmedVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OriginalVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OriginalVideoId");

                    b.HasIndex("UserId");

                    b.ToTable("TrimmedVideos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FrameRate")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VideoStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Video", "Video")
                        .WithMany("Frames")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("BarClip.Data.Schema.PlateDetection", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Frame", "Frame")
                        .WithMany("PlateDetections")
                        .HasForeignKey("FrameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Frame");
                });

            modelBuilder.Entity("BarClip.Data.Schema.TrimmedVideo", b =>
                {
                    b.HasOne("BarClip.Data.Schema.Video", "OriginalVideo")
                        .WithMany("TrimmedVideos")
                        .HasForeignKey("OriginalVideoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BarClip.Data.Schema.User", "User")
                        .WithMany("TrimmedVideos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("OriginalVideo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.HasOne("BarClip.Data.Schema.User", "User")
                        .WithMany("Videos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Frame", b =>
                {
                    b.Navigation("PlateDetections");
                });

            modelBuilder.Entity("BarClip.Data.Schema.User", b =>
                {
                    b.Navigation("TrimmedVideos");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("BarClip.Data.Schema.Video", b =>
                {
                    b.Navigation("Frames");

                    b.Navigation("TrimmedVideos");
                });
#pragma warning restore 612, 618
        }
    }
}
